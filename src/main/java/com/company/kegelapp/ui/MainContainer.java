
package com.company.kegelapp.ui;

import com.rapidclipse.framework.server.ui.navigation.NavigationSideBar;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.HasElement;
import com.vaadin.flow.component.UI;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.dependency.HtmlImport;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.RouterLayout;
import com.vaadin.flow.server.InitialPageSettings;
import com.vaadin.flow.server.PageConfigurator;


@HtmlImport("frontend://styles/shared-styles.html")
@HtmlImport("frontend://styles/my-custom-navsidebar.html")
public class MainContainer extends VerticalLayout implements PageConfigurator, RouterLayout
{
	public MainContainer()
	{
		super();
		this.initUI();
		
	}
	
	@Override
	public void configurePage(final InitialPageSettings settings)
	{
		settings.addLink("shortcut icon", "frontend/images/favicon.ico");
		settings.addFavIcon("icon", "frontend/images/favicon256.png", "256x256");
	}
	
	@Override
	public void showRouterLayoutContent(final HasElement content)
	{
		this.contentContainer.removeAll();
		this.contentContainer.getElement().appendChild(content.getElement());
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		UI.getCurrent().navigate(StartView.class);
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.headerContainer        = new HorizontalLayout();
		this.button                 = new Button();
		this.contentParentContainer = new HorizontalLayout();
		this.navigationSideBar      = new NavigationSideBar();
		this.contentContainer       = new VerticalLayout();

		this.setSpacing(false);
		this.setPadding(false);
		this.setDefaultHorizontalComponentAlignment(FlexComponent.Alignment.STRETCH);
		this.headerContainer.setClassName("my-header");
		this.headerContainer.setSpacing(false);
		this.button.setText("FEUCHTE PUDEL");
		this.contentParentContainer.setMinHeight("0");
		this.contentParentContainer.setSpacing(false);
		this.contentParentContainer.setDefaultVerticalComponentAlignment(FlexComponent.Alignment.STRETCH);
		this.navigationSideBar.setClassName("my-custom-navsidebar");
		this.navigationSideBar.setMinWidth("200px");
		this.navigationSideBar.getStyle().set("overflow-x", "hidden");
		this.navigationSideBar.getStyle().set("overflow-y", "auto");
		this.contentContainer.setMinHeight("0");
		this.contentContainer.setSpacing(false);
		this.contentContainer.setPadding(false);
		this.contentContainer.setDefaultHorizontalComponentAlignment(FlexComponent.Alignment.STRETCH);
		this.contentContainer.getStyle().set("overflow-x", "hidden");
		this.contentContainer.getStyle().set("overflow-y", "auto");

		this.button.setSizeUndefined();
		this.headerContainer.add(this.button);
		this.headerContainer.setVerticalComponentAlignment(FlexComponent.Alignment.CENTER, this.button);
		this.navigationSideBar.setSizeUndefined();
		this.contentContainer.setSizeUndefined();
		this.contentParentContainer.add(this.navigationSideBar, this.contentContainer);
		this.contentParentContainer.setVerticalComponentAlignment(FlexComponent.Alignment.STRETCH,
			this.contentContainer);
		this.contentParentContainer.setFlexGrow(1.0, this.contentContainer);
		this.headerContainer.setWidthFull();
		this.headerContainer.setHeight(null);
		this.contentParentContainer.setSizeUndefined();
		this.add(this.headerContainer, this.contentParentContainer);
		this.setHorizontalComponentAlignment(FlexComponent.Alignment.CENTER, this.headerContainer);
		this.setFlexGrow(1.0, this.contentParentContainer);
		this.setSizeFull();

		this.button.addClickListener(this::button_onClick);
	} // </generated-code>

	// <generated-code name="variables">
	private Button            button;
	private NavigationSideBar navigationSideBar;
	private HorizontalLayout  headerContainer, contentParentContainer;
	private VerticalLayout    contentContainer;
	// </generated-code>
	
}
